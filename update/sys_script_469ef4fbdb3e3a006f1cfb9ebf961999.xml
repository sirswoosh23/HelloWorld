<?xml version="1.0" encoding="UTF-8"?>
<record_update sys_domain="774190f01f1310005a3637b8ec8b70ef" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_label/>
        <action_name/>
        <action_query>false</action_query>
        <action_run_at>server</action_run_at>
        <action_update>true</action_update>
        <active>false</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <application/>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_63024_case_table</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Solution Summaries</name>
        <onclick/>
        <order>100</order>
        <priority>100</priority>
        <read_access_action>false</read_access_action>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/ ) {
    var grrsys = current.sys_id;
    var gr = new GlideRecord('x_63024_case_solution_summary');
    gr.query();
    while (gr.next()) {
        if (current.enterprise_block_storage_s != '' && (gr.enterprise_block_storage_s == current.enterprise_block_storage_s) && (gr.vendor == current.storage_vendor)) {
            var grr = new GlideRecord('x_63024_case_case_solution_summary');
            grr.initialize();
            grr.solution = gr.solution;
            grr.case_reference = grrsys;
            grr.insert();
        }
        if (current.general_purpose_file_storage_s != '' && (gr.general_purpose_file_storage_s == current.general_purpose_file_storage_s) && (gr.vendor == current.storage_vendor)) {
            var grr = new GlideRecord('x_63024_case_case_solution_summary');
            grr.initialize();
            grr.solution = gr.solution;
            grr.case_reference = grrsys;
            grr.insert();
        }

        if (current.hybrid_flash_disk_storage_s != '' && (gr.hybrid_flash_disk_storage_s == current.hybrid_flash_disk_storage_s) && (gr.vendor == current.storage_vendor)) {
            var grr = new GlideRecord('x_63024_case_case_solution_summary');
            grr.initialize();
            grr.solution = gr.solution;
            grr.case_reference = grrsys;
            grr.insert();
        }

        if (current.elastic_cloud_storage_s != '' && (gr.elastic_cloud_storage_s == current.elastic_cloud_storage_s) && (gr.vendor == current.storage_vendor)) {
            var grr = new GlideRecord('x_63024_case_case_solution_summary');
            grr.initialize();
            grr.solution = gr.solution;
            grr.case_reference = grrsys;
            grr.insert();
        }

        if (current.object_storage_s != '' && (gr.object_storage_s == current.object_storage_s) && (gr.vendor == current.storage_vendor)) {
            var grr = new GlideRecord('x_63024_case_case_solution_summary');
            grr.initialize();
            grr.solution = gr.solution;
            grr.case_reference = grrsys;
            grr.insert();
        }
        if (current.scaleout_nas_s != '' && (gr.scaleout_nas_s == current.scaleout_nas_s) && (gr.vendor == current.storage_vendor)) {
            var grr = new GlideRecord('x_63024_case_case_solution_summary');
            grr.initialize();
            grr.solution = gr.solution;
            grr.case_reference = grrsys;
            grr.insert();
        }
        if (current.cloud_tiering_appliance_s != '' && (gr.cloud_tiering_appliance_s == current.cloud_tiering_appliance_s) && (gr.vendor == current.storage_vendor)) {
            var grr = new GlideRecord('x_63024_case_case_solution_summary');
            grr.initialize();
            grr.solution = gr.solution;
            grr.case_reference = grrsys;
            grr.insert();
        }
        if (current.array_based_replication != '' && (gr.array_based_replication == current.array_based_replication) && (gr.vendor == current.storage_vendor)) {
            var grr = new GlideRecord('x_63024_case_case_solution_summary');
            grr.initialize();
            grr.solution = gr.solution;
            grr.case_reference = grrsys;
            grr.insert();
        }
        if (current.appliance_based_replication != '' && (gr.appliance_based_replication == current.appliance_based_replication) && (gr.vendor == current.storage_vendor)) {
            var grr = new GlideRecord('x_63024_case_case_solution_summary');
            grr.initialize();
            grr.solution = gr.solution;
            grr.case_reference = grrsys;
            grr.insert();
        }


    }
})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>nick.minnich@thinkahead.com</sys_created_by>
        <sys_created_on>2017-05-24 19:06:38</sys_created_on>
        <sys_customer_update>true</sys_customer_update>
        <sys_domain>774190f01f1310005a3637b8ec8b70ef</sys_domain>
        <sys_domain_path>!!!/</sys_domain_path>
        <sys_id>469ef4fbdb3e3a006f1cfb9ebf961999</sys_id>
        <sys_mod_count>10</sys_mod_count>
        <sys_name>Solution Summaries</sys_name>
        <sys_overrides/>
        <sys_package display_value="Case" source="x_63024_case">5bc81b214f74b600c97627118110c72d</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Case">5bc81b214f74b600c97627118110c72d</sys_scope>
        <sys_update_name>sys_script_469ef4fbdb3e3a006f1cfb9ebf961999</sys_update_name>
        <sys_updated_by>frank.kuligowski@thinkahead.com</sys_updated_by>
        <sys_updated_on>2017-06-15 00:00:29</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
</record_update>
